# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  - main

pool:
  vmImage: ubuntu-latest

jobs:
  - job: PythonPackageJob
    displayName: "Python Package Job"
    strategy:
      matrix:
        Python27:
          python.version: "2.7"
        Python35:
          python.version: "3.5"
        Python36:
          python.version: "3.6"
        Python37:
          python.version: "3.7"

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"
        displayName: "Use Python $(python.version)"

      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        displayName: "Install dependencies"

      - script: |
          pip install pytest pytest-azurepipelines
          pytest
        displayName: "pytest"

      - script: |
          # Add code analysis steps here, e.g., using tools like pylint, flake8, etc.
          # Example: pylint your_module.py
          pylint helloworld.py
        displayName: "Code Analysis"

      - script: |
          # Save distribution files (e.g., wheel, tar.gz) with build record
          python setup.py sdist bdist_wheel
          # Optionally, you can publish the distribution files as artifacts
          # Example: Publish artifacts to be used in the next stages or jobs
          # publish: $(System.DefaultWorkingDirectory)/dist/*.whl
        displayName: "Save Distribution"

      - script: |
          # Publish to a PyPI-compatible index
          # Replace 'your_pypi_repository' with the actual PyPI repository URL
          python -m pip install twine
          twine upload --repository-url https://your_pypi_repository/ dist/*
        displayName: "Publish to PyPI"
